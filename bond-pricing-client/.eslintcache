[{"/Users/ollieblair/NEA/bond-pricing-client/src/index.js":"1","/Users/ollieblair/NEA/bond-pricing-client/src/App.js":"2","/Users/ollieblair/NEA/bond-pricing-client/src/AppHeader.js":"3","/Users/ollieblair/NEA/bond-pricing-client/src/rest/APICalls.js":"4","/Users/ollieblair/NEA/bond-pricing-client/src/constants/index.js":"5","/Users/ollieblair/NEA/bond-pricing-client/src/common/LoadingIndicator.js":"6","/Users/ollieblair/NEA/bond-pricing-client/src/Login.js":"7","/Users/ollieblair/NEA/bond-pricing-client/src/Profile.js":"8","/Users/ollieblair/NEA/bond-pricing-client/src/common/NotFound.js":"9","/Users/ollieblair/NEA/bond-pricing-client/src/common/ServerError.js":"10","/Users/ollieblair/NEA/bond-pricing-client/src/BondTable.js":"11","/Users/ollieblair/NEA/bond-pricing-client/src/BondInfo.js":"12","/Users/ollieblair/NEA/bond-pricing-client/src/Bond.js":"13"},{"size":285,"mtime":1618739249827,"results":"14","hashOfConfig":"15"},{"size":3997,"mtime":1618737818968,"results":"16","hashOfConfig":"15"},{"size":4182,"mtime":1618777721423,"results":"17","hashOfConfig":"15"},{"size":2034,"mtime":1618739801251,"results":"18","hashOfConfig":"15"},{"size":435,"mtime":1618067782631,"results":"19","hashOfConfig":"15"},{"size":450,"mtime":1618777721423,"results":"20","hashOfConfig":"15"},{"size":2734,"mtime":1618739248296,"results":"21","hashOfConfig":"15"},{"size":2919,"mtime":1618739245811,"results":"22","hashOfConfig":"15"},{"size":724,"mtime":1618736863681,"results":"23","hashOfConfig":"15"},{"size":806,"mtime":1618736865116,"results":"24","hashOfConfig":"15"},{"size":2894,"mtime":1618749368875,"results":"25","hashOfConfig":"15"},{"size":7568,"mtime":1618738683913,"results":"26","hashOfConfig":"15"},{"size":3855,"mtime":1618738226675,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"bcp29c",{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"31"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"31"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"31"},"/Users/ollieblair/NEA/bond-pricing-client/src/index.js",["64"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\n{/* Renders the application */}\nReactDOM.render (\n    <Router><App /></Router>, document.getElementById('root')\n);\n",["65","66"],"/Users/ollieblair/NEA/bond-pricing-client/src/App.js",["67","68","69"],"import React, { Component } from 'react';\nimport { withRouter, Route, Switch } from 'react-router-dom';\n\nimport { ACCESS_TOKEN } from './constants';\nimport { getCurrentUser } from './rest/APICalls';\n\nimport LoadingIndicator from './common/LoadingIndicator';\nimport Login from './Login';\nimport Profile from './Profile';\nimport BondTable from './BondTable';\nimport BondInfo from './BondInfo';\nimport AddBond from './Bond';\n\n\nimport './App.css';\nimport AppHeader from './AppHeader';\n\nimport { Layout, notification } from 'antd';\nconst { Content } = Layout;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      isAuthenticated: false,\n      isLoading: false\n    }\n    this.handleLogout = this.handleLogout.bind(this);\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.bondAdded = this.bondAdded.bind(this);\n\n    {/* Notification attributes */}\n    notification.config({\n      placement: 'topRight',\n      top: 70,\n      duration: 3,\n    });    \n  }\n\n  loadCurrentUser() {\n    this.setState({\n      isLoading: true\n    });\n    getCurrentUser()\n    .then(response => {\n      this.setState({\n        currentUser: response,\n        isAuthenticated: true,\n        isLoading: false\n      });\n    }).catch(error => {\n      this.setState({\n        isLoading: false\n      });  \n    });\n  }\n\n  handleLogout(redirectTo=\"/\", notificationType=\"success\", description=\"You're successfully logged out.\") {\n    localStorage.removeItem(ACCESS_TOKEN);\n\n    this.setState({\n      currentUser: null,\n      isAuthenticated: false\n    });\n\n    {/* Takes user to login page after logging out*/}\n    this.props.history.push(\"/login\");\n    \n    notification[notificationType]({\n      message: 'Bond Pricing Application',\n      description: description,\n    });\n  }\n\n  handleLogin() {\n    notification.success({\n      message: 'Bond Pricing Application',\n      description: \"You're successfully logged in.\",\n    });\n    this.loadCurrentUser();\n    this.props.history.push(\"/\");\n  }\n\n  bondAdded() {\n    notification.success({\n      message: 'Bond Pricing Application',\n      description: \"Successfully added bond.\",\n    });\n    this.props.history.push(\"/\");\n  }\n\n\n  render() {\n    if(this.state.isLoading) {\n      return <LoadingIndicator />\n    }\n    {/* Renders the different paths */}\n    return (\n      <Layout className=\"app-container\">\n        <AppHeader isAuthenticated={this.state.isAuthenticated} \n            currentUser={this.state.currentUser} \n            onLogout={this.handleLogout} />\n        \n        <Content className=\"app-content\">\n            <div className=\"container\">\n              <Switch>      \n                <Route exact path=\"/\" \n                  render={(props) => <BondTable isAuthenticated={this.state.isAuthenticated} \n                      currentUser={this.state.currentUser} handleLogout={this.handleLogout} {...props} />}>\n                </Route>\n                <Route exact path=\"/bond/:id\" \n                  render={(props) => <BondInfo isAuthenticated={this.state.isAuthenticated} \n                      currentUser={this.state.currentUser} {...props} />}>\n                </Route>\n                <Route exact path=\"/addbond\" \n                  render={(props) => <AddBond isAuthenticated={this.state.isAuthenticated} \n                      currentUser={this.state.currentUser} {...props} bondAdded={this.bondAdded}/>} >\n                </Route>\n                <Route path=\"/login\" \n                  render={(props) => <Login onLogin={this.handleLogin} {...props} />}>\n                </Route>\n                <Route path=\"/users/:username\" \n                  render={(props) => <Profile isAuthenticated={this.state.isAuthenticated} currentUser={this.state.currentUser} {...props}  />}>\n                </Route>\n              </Switch>\n            </div>\n          </Content>\n\n      </Layout>\n    )\n  };\n}\n\nexport default withRouter(App);\n","/Users/ollieblair/NEA/bond-pricing-client/src/AppHeader.js",["70","71","72","73","74"],"/Users/ollieblair/NEA/bond-pricing-client/src/rest/APICalls.js",["75","76","77","78","79","80","81"],"import { API_BASE_URL, ACCESS_TOKEN } from '../constants';\n\n{/* Setting up api requests */}\nconst request = (options) => {\n    const headers = new Headers({\n        'Content-Type': 'application/json',\n    })\n\n    if(localStorage.getItem(ACCESS_TOKEN)) {\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN)) \n    }\n\n    const defaults = {headers: headers};\n    options = Object.assign({}, defaults, options);\n\n    return fetch(options.url, options)\n    .then(response => \n        response.json().then(json => {\n            if(!response.ok) {\n                return Promise.reject(json);\n            }\n            return json;\n        })\n    );\n};\n\n{/* Login Request */}\nexport function login(loginRequest) {\n    return request({\n        url: API_BASE_URL + \"/auth/signin\",\n        method: 'POST',\n        body: JSON.stringify(loginRequest)\n    });\n}\n\n\nexport function getCurrentUser() {\n    if(!localStorage.getItem(ACCESS_TOKEN)) {\n        return Promise.reject(\"No access token set.\");\n    }\n\n    return request({\n        url: API_BASE_URL + \"/user/me\",\n        method: 'GET'\n    });\n}\n\n{/* Gets users' profile */}\nexport function getUserProfile(username) {\n    return request({\n        url: API_BASE_URL + \"/users/\" + username,\n        method: 'GET'\n    });\n}\n\n{/* Gets all bonds */}\nexport function getAllBonds(page, size) {\n    return request({\n        url: `${API_BASE_URL}/bonds?page=${page - 1}&size=${size}`,\n        method: 'GET'\n    });\n}\n\n{/* Gets ID of a bond */}\nexport function getBond(id) {\n    return request({\n        url: `${API_BASE_URL}/bonds/${id}`,\n        method: 'GET'\n    });\n}\n\n{/* Price Request */}\nexport function price(priceRequest) {\n    return request({\n        url: `${API_BASE_URL}/bonds/price`,\n        method: 'POST',\n        body: JSON.stringify(priceRequest)\n    });\n}\n{/* Add bond Request */}\nexport function add(addRequest) {\n    return request({\n        url: `${API_BASE_URL}/bonds/`,\n        method: 'POST',\n        body: JSON.stringify(addRequest)\n    });\n}","/Users/ollieblair/NEA/bond-pricing-client/src/constants/index.js",[],"/Users/ollieblair/NEA/bond-pricing-client/src/common/LoadingIndicator.js",[],"/Users/ollieblair/NEA/bond-pricing-client/src/Login.js",["82"],"import React, { Component } from 'react';\nimport { login } from './rest/APICalls';\nimport './Login.css';\nimport { ACCESS_TOKEN } from './constants';\n\nimport { Form, Input, Button, notification } from 'antd';\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\n\nclass Login extends Component {\n    render() {\n        return (\n            <div className=\"login-container\">\n                <h1 className=\"page-title\">Login</h1>\n                <div className=\"login-content\">\n                    <LoginForm onLogin={this.props.onLogin} />\n                </div>\n            </div>\n        );\n    }\n}\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        const loginRequest = Object.assign({}, values);\n        login(loginRequest)\n        .then(response => {\n            localStorage.setItem(ACCESS_TOKEN, response.accessToken);\n            {/* Sets the access token allowing the user to access the application */}\n            this.props.onLogin();\n        }).catch(error => {\n            if(error.status === 401) {\n                notification.error({\n                    message: 'Bond Pricing Application',\n                    description: 'Your Username or Password is incorrect. Please try again!'\n                });                    \n            } else {\n                notification.error({\n                    message: 'Bond Pricing Application',\n                    description: error.message || 'Sorry! Something went wrong. Please try again!'\n                });                                            \n            }\n        });\n    }\n\n    render() {\n        return (\n            <Form onFinish={this.handleSubmit} className=\"login-form\">\n                <Form.Item\n                    name='usernameOrEmail' rules={[{ required: true, message: 'Please input your username or email!'}]}>\n                    <Input \n                        prefix={<UserOutlined />}\n                        size=\"large\" \n                        placeholder=\"Username\" /> \n                </Form.Item>\n                <Form.Item\n                    name='password' rules={[{ required: true, message: 'Please input your Password!'}]}>\n                    <Input.Password\n                        prefix={<LockOutlined />}\n                        size=\"large\"\n                        placeholder=\"Password\" />                        \n                </Form.Item>\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\" className=\"login-form-button\">Login</Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nexport default Login;","/Users/ollieblair/NEA/bond-pricing-client/src/Profile.js",["83"],"import React, { Component } from 'react';\n\nimport { getUserProfile } from './rest/APICalls';\nimport { Avatar } from 'antd';\nimport LoadingIndicator  from './common/LoadingIndicator';\nimport './Profile.css';\nimport NotFound from './common/NotFound';\nimport ServerError from './common/ServerError';\n\n {/* Sets up the user profile  */}\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: null,\n            isLoading: false\n        }\n        this.loadUserProfile = this.loadUserProfile.bind(this);\n    }\n\n    loadUserProfile(username) {\n        this.setState({\n            isLoading: true\n        });\n\n        getUserProfile(username)\n        .then(response => {\n            this.setState({\n                user: response,\n                isLoading: false\n            });\n        }).catch(error => {\n            if(error.status === 404) {\n                this.setState({\n                    notFound: true,\n                    isLoading: false\n                });\n            } else {\n                this.setState({\n                    serverError: true,\n                    isLoading: false\n                });        \n            }\n        });        \n    }\n      \n    componentDidMount() {\n        const username = this.props.match.params.username;\n        this.loadUserProfile(username);\n    }\n\n    componentDidUpdate(nextProps) {\n        if(this.props.match.params.username !== nextProps.match.params.username) {\n            this.loadUserProfile(nextProps.match.params.username);\n        }        \n    }\n\n    render() {\n        if(this.state.isLoading) {\n            return <LoadingIndicator />;\n        }\n\n        if(this.state.notFound) {\n            return <NotFound />;\n        }\n\n        if(this.state.serverError) {\n            return <ServerError />;\n        }\n\n        return (\n            <div className=\"profile\"> { \n                this.state.user ? (\n                    <div className=\"user-profile\">\n                        <div className=\"user-details\">\n                            <div className=\"user-avatar\">\n                                <Avatar className=\"user-avatar-circle\" >\n                                    {this.state.user.name[0].toUpperCase()}\n                                </Avatar>\n                            </div>\n                            <div className=\"user-summary\">\n                                <div className=\"full-name\">{this.state.user.name}</div>\n                                <div className=\"username\">@{this.state.user.username}</div>\n                                <div className=\"user-joined\">\n                                    Joined {this.state.user.joinedAt}\n                                </div>\n                            </div>\n                        </div>\n                    </div>  \n                ) : null }\n            </div>\n        );\n    }\n}\n\nexport default Profile;","/Users/ollieblair/NEA/bond-pricing-client/src/common/NotFound.js",["84"],"import React, { Component } from 'react';\nimport './NotFound.css';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'antd';\n\n{/* If page not found return 404 error and prompt user to be returned to home page*/}\nclass NotFound extends Component {\n    render() {\n        return (\n            <div className=\"page-not-found\">\n                <h1 className=\"title\">\n                    404\n                </h1>\n                <div className=\"desc\">\n                    The Page you're looking for was not found.\n                </div>\n                <Link to=\"/\"><Button className=\"go-back-btn\" type=\"primary\" size=\"large\">Go Back</Button></Link>\n            </div>\n        );\n    }\n}\n\nexport default NotFound;","/Users/ollieblair/NEA/bond-pricing-client/src/common/ServerError.js",["85"],"import React, { Component } from 'react';\nimport './ServerError.css';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'antd';\n\n{/* If there is a server error catches error and prompts user to be returned to home page*/}\nclass ServerError extends Component {\n    render() {\n        return (\n            <div className=\"server-error-page\">\n                <h1 className=\"server-error-title\">\n                    500\n                </h1>\n                <div className=\"server-error-desc\">\n                    Oops! Something went wrong at our Server. Why don't you go back?\n                </div>\n                <Link to=\"/\"><Button className=\"server-error-go-back-btn\" type=\"primary\" size=\"large\">Go Back</Button></Link>\n            </div>\n        );\n    }\n}\n\nexport default ServerError;\n\n","/Users/ollieblair/NEA/bond-pricing-client/src/BondTable.js",["86"],"/Users/ollieblair/NEA/bond-pricing-client/src/BondInfo.js",["87","88","89","90"],"import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Divider, Form, Input, Button, Select, DatePicker, InputNumber, Row, Col, notification } from 'antd';\nimport { getBond, price } from './rest/APICalls';\nimport moment from 'moment';    \n\nimport { LineChart, Line, XAxis, YAxis, Legend, Tooltip, BarChart, Bar, ResponsiveContainer} from \"recharts\";\n\nclass BondInfo extends Component {\n    \n    formRef = React.createRef();\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          curve: [],\n          cashflows: [],\n          price: 0,\n          isLoading: false,\n        };\n        this.loadBond = this.loadBond.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    loadBond(id) {\n        this.setState({\n            isLoading: true\n        });\n{/* Popualates the form with the given bond's attributes from the database */}\n        getBond(id)\n        .then(response => {\n            this.formRef.current.setFieldsValue({\n                isin: response.isin,\n                currency: response.currency,\n                coupon: response.coupon * 100, \n                frequency: response.frequency,\n                dayCount: response.dayCount,\n                issueDate: moment.utc(response.issueDate),\n                maturityDate: moment.utc(response.maturityDate),\n                stubStartDate: response.stubStartDate == null ? null : moment(response.stubStartDate),\n                stubEndDate: response.stubEndDate == null ? null : moment(response.stubEndDate),\n\n            })\n            this.setState({\n                isLoading: false\n            });\n        }).catch(error => {\n            if(error.status === 404) {\n                this.setState({\n                    notFound: true,\n                    isLoading: false\n                });\n            } else {\n                this.setState({\n                    serverError: true,\n                    isLoading: false\n                });        \n            }\n        });        \n    }\n      \n    componentDidMount() {\n        const id = this.props.match.params.id;\n        this.loadBond(id);\n    }\n\n    handleSubmit(values) {\n        {/* Functionality for when user presses price */}\n        const priceRequest = Object.assign({}, values);\n        price(priceRequest)\n        .then(response => {\n        {/* Returns the price, cahsflows and curve points */}\n            this.setState( {\n                curve: response.curve.points,\n                cashflows: response.cashFlows,\n                price: response.price\n            })\n                           \n        }).catch(error => {\n            notification.error({\n                    message: 'Error',\n                    description: 'Something went wrong please try again'\n            });                            \n        });\n    }\n\n    render() {\n        {/* Renders the form for bond attributes. \n            Renders the charts from the given curve points and cashflows\n            Renders the bond price on the screen\n        */}\n        const { curve, cashflows, price } = this.state;\n        return (\n            <Form ref={this.formRef}\n                labelCol={{ span: 5 }}\n                wrapperCol={{ span: 14 }}\n                layout=\"horizontal\"\n                onFinish={this.handleSubmit} className=\"bond-form\">\n                <Form.Item name=\"isin\" label=\"Isin\">\n                    <Input/>\n                </Form.Item>\n                <Form.Item name=\"currency\" label=\"Currency\">\n                    <Select>\n                        <Select.Option value=\"EUR\">EUR</Select.Option>\n                        <Select.Option value=\"GBP\">GBP</Select.Option>\n                        <Select.Option value=\"USD\">USD</Select.Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item name=\"coupon\" label=\"Coupon\">\n                    <InputNumber\n                        min={0}\n                        max={100}\n                        formatter={value => `${value}%`}\n                        parser={value => value.replace('%', '')}\n                    />\n                </Form.Item>\n                <Form.Item name=\"frequency\" label=\"Frequency\">\n                    <Select>\n                        <Select.Option value=\"ANNUALLY\">Annually</Select.Option>\n                        <Select.Option value=\"QUARTERLY\">Quarterly</Select.Option>\n                        <Select.Option value=\"SEMIANNUALLY\">Semi-annually</Select.Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item name=\"dayCount\" label=\"Daycount\">\n                    <Select>\n                        <Select.Option value=\"ACT360\">Act/360</Select.Option>\n                        <Select.Option value=\"ACT365\">Act/365</Select.Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item label=\"Issue Date\" >\n                    <Row gutter={8}>\n                        <Col span={6}>\n                            <Form.Item name=\"issueDate\" >\n                                <DatePicker />\n                            </Form.Item>\n                        </Col>\n                        <Col span={2}/>\n                        <Col span={12}>\n                            <Form.Item name=\"maturityDate\" label=\"Maturity Date\">\n                                <DatePicker />\n                            </Form.Item>\n                        </Col>\n                    </Row>        \n                </Form.Item>\n                <Form.Item label=\"Valuation Date\">\n                    <Row gutter={8}>\n                        <Col span={6}>\n                            <Form.Item name=\"valuationDate\" noStyle rules={[{ required: true}]}>\n                                <DatePicker />\n                            </Form.Item>\n                        </Col>\n                        <Col span={2}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Price\n                            </Button>\n                        </Col>\n                        <Col span={8}/>\n                    </Row>\n                </Form.Item>\n                <Divider />\n                <p >Bond price is {price}</p>\n                <ResponsiveContainer width={800} height={400} \n                    margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                    <BarChart data={cashflows}>\n                      <XAxis dataKey=\"date\" />\n                      <YAxis />\n                      <Bar\n                        stackId=\"a\"\n                        dataKey=\"discountedAmount\"\n                        name=\"Discounted Cashflows\"\n                        fill=\"#7DB3FF\"\n                      />\n                      <Bar\n                        stackId=\"b\"\n                        dataKey=\"amount\"\n                        name=\"Cashflows\"\n                        fill=\"#49457B\"\n                      />\n                      <Legend />\n                      <Tooltip />\n                    </BarChart>\n                </ResponsiveContainer>\n                <Divider />\n                <LineChart width={800} height={400} data={curve}\n                    margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                    <XAxis dataKey=\"offset\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Line type=\"monotone\" dataKey=\"rate\" stroke=\"#8884d8\" />\n                    <Legend />\n                </LineChart>\n            </Form>\n        );\n    }\n}\n\nexport default withRouter(BondInfo);","/Users/ollieblair/NEA/bond-pricing-client/src/Bond.js",["91","92","93"],"import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Form, Input, Button, Select, DatePicker, InputNumber, Row, Col, notification } from 'antd';\nimport { add } from './rest/APICalls'; \n\n{/* Handles the adding of a bond */}\nclass AddBond extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleSubmit(values) {\n        const addRequest = Object.assign({}, values);\n        addRequest.coupon /= 100; {/* Coupon displayed as percentage on screen so must divide by 100 */}\n        add(addRequest)\n        .then(response => {\n            this.props.bondAdded();\n        }).catch(error => {\n            notification.error({\n                    message: 'Error',\n                    description: 'Something went wrong, please try again'\n            });                            \n        });\n    }\n\n    render() {\n        {/* Renders the form where the user can fill out the bond attributes */}\n        return (\n            <Form\n                labelCol={{ span: 5 }}\n                wrapperCol={{ span: 14 }}\n                layout=\"horizontal\"\n                onFinish={this.handleSubmit} className=\"bond-form\">\n                <Form.Item name=\"isin\" label=\"Isin\">\n                    <Input/>\n                </Form.Item>\n                <Form.Item name=\"currency\" label=\"Currency\">\n                    <Select>\n                        <Select.Option value=\"EUR\">EUR</Select.Option>\n                        <Select.Option value=\"GBP\">GBP</Select.Option>\n                        <Select.Option value=\"USD\">USD</Select.Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item name=\"coupon\" label=\"Coupon\">\n                    <InputNumber\n                        min={0}\n                        max={100}\n                        formatter={value => `${value}%`}\n                        parser={value => value.replace('%', '')}\n                    />\n                </Form.Item>\n                <Form.Item name=\"frequency\" label=\"Frequency\">\n                    <Select>\n                        <Select.Option value=\"ANNUALLY\">Annually</Select.Option>\n                        <Select.Option value=\"QUARTERLY\">Quarterly</Select.Option>\n                        <Select.Option value=\"SEMIANNUALLY\">Semi-annually</Select.Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item name=\"dayCount\" label=\"Daycount\">\n                    <Select>\n                        <Select.Option value=\"ACT360\">Act/360</Select.Option>\n                        <Select.Option value=\"ACT365\">Act/365</Select.Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item label=\"Issue Date\" >\n                    <Row gutter={8}>\n                        <Col span={6}>\n                            <Form.Item name=\"issueDate\" >\n                                <DatePicker />\n                            </Form.Item>\n                        </Col>\n                        <Col span={2}/>\n                        <Col span={12}>\n                            <Form.Item name=\"maturityDate\" label=\"Maturity Date\">\n                                <DatePicker />\n                            </Form.Item>\n                        </Col>\n                    </Row>        \n                </Form.Item>\n                <Form.Item>\n                    <Row gutter={8}>\n                        <Col span={18}/>\n                        <Col span={2}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Add\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nexport default withRouter(AddBond);",{"ruleId":"94","severity":1,"message":"95","line":8,"column":1,"nodeType":"96","messageId":"97","endLine":8,"endColumn":32},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"94","severity":1,"message":"102","line":34,"column":5,"nodeType":"96","messageId":"103","endLine":34,"endColumn":36},{"ruleId":"94","severity":1,"message":"102","line":68,"column":5,"nodeType":"96","messageId":"103","endLine":68,"endColumn":54},{"ruleId":"94","severity":1,"message":"102","line":99,"column":5,"nodeType":"96","messageId":"103","endLine":99,"endColumn":40},{"ruleId":"94","severity":1,"message":"95","line":9,"column":1,"nodeType":"96","messageId":"97","endLine":9,"endColumn":53},{"ruleId":"94","severity":1,"message":"102","line":24,"column":5,"nodeType":"96","messageId":"103","endLine":24,"endColumn":70},{"ruleId":"94","severity":1,"message":"102","line":44,"column":3,"nodeType":"96","messageId":"103","endLine":44,"endColumn":74},{"ruleId":"94","severity":1,"message":"95","line":69,"column":1,"nodeType":"96","messageId":"97","endLine":69,"endColumn":51},{"ruleId":"94","severity":1,"message":"95","line":104,"column":1,"nodeType":"96","messageId":"97","endLine":104,"endColumn":47},{"ruleId":"94","severity":1,"message":"95","line":3,"column":1,"nodeType":"96","messageId":"97","endLine":3,"endColumn":32},{"ruleId":"94","severity":1,"message":"95","line":27,"column":1,"nodeType":"96","messageId":"97","endLine":27,"endColumn":22},{"ruleId":"94","severity":1,"message":"95","line":48,"column":1,"nodeType":"96","messageId":"97","endLine":48,"endColumn":28},{"ruleId":"94","severity":1,"message":"95","line":56,"column":1,"nodeType":"96","messageId":"97","endLine":56,"endColumn":23},{"ruleId":"94","severity":1,"message":"95","line":64,"column":1,"nodeType":"96","messageId":"97","endLine":64,"endColumn":26},{"ruleId":"94","severity":1,"message":"95","line":72,"column":1,"nodeType":"96","messageId":"97","endLine":72,"endColumn":22},{"ruleId":"94","severity":1,"message":"95","line":80,"column":1,"nodeType":"96","messageId":"97","endLine":80,"endColumn":25},{"ruleId":"94","severity":1,"message":"102","line":33,"column":13,"nodeType":"96","messageId":"103","endLine":33,"endColumn":86},{"ruleId":"94","severity":1,"message":"95","line":10,"column":2,"nodeType":"96","messageId":"97","endLine":10,"endColumn":35},{"ruleId":"94","severity":1,"message":"95","line":6,"column":1,"nodeType":"96","messageId":"97","endLine":6,"endColumn":86},{"ruleId":"94","severity":1,"message":"95","line":6,"column":1,"nodeType":"96","messageId":"97","endLine":6,"endColumn":93},{"ruleId":"94","severity":1,"message":"95","line":50,"column":1,"nodeType":"96","messageId":"97","endLine":50,"endColumn":55},{"ruleId":"94","severity":1,"message":"102","line":29,"column":1,"nodeType":"96","messageId":"103","endLine":29,"endColumn":79},{"ruleId":"94","severity":1,"message":"102","line":68,"column":9,"nodeType":"96","messageId":"103","endLine":68,"endColumn":58},{"ruleId":"94","severity":1,"message":"102","line":72,"column":9,"nodeType":"96","messageId":"103","endLine":72,"endColumn":62},{"ruleId":"94","severity":1,"message":"102","line":88,"column":9,"nodeType":"96","messageId":"103","endLine":91,"endColumn":12},{"ruleId":"94","severity":1,"message":"95","line":6,"column":1,"nodeType":"96","messageId":"97","endLine":6,"endColumn":37},{"ruleId":"94","severity":1,"message":"102","line":16,"column":35,"nodeType":"96","messageId":"103","endLine":16,"endColumn":105},{"ruleId":"94","severity":1,"message":"102","line":29,"column":9,"nodeType":"96","messageId":"103","endLine":29,"endColumn":81},"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-native-reassign",["104"],"no-negated-in-lhs",["105"],"Nested block is redundant.","redundantNestedBlock","no-global-assign","no-unsafe-negation"]